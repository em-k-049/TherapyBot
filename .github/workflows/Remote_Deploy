name: Full-Stack CI/CD

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  tests:
    name: Run Backend & Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests (pytest)
        working-directory: backend
        run: |
          pytest -q

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend deps & run tests
        working-directory: frontend
        run: |
          npm ci
          # Install Playwright browsers only if tests require them in CI
          if [ -f package.json ] && grep -q playwright package.json; then npx playwright install --with-deps || true; fi
          npm test --if-present

  build-and-push:
    name: Build & Push Docker Images
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/therapybot-backend:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/therapybot-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/therapybot-frontend:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/therapybot-frontend:latest

  deploy:
    name: Deploy to Remote Server
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for artifacts / context)
        uses: actions/checkout@v4

      - name: Deploy via SSH (docker-compose pull & up)
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ${{ secrets.REMOTE_APP_DIR }}
            # Ensure docker-compose file exists
            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found in REMOTE_APP_DIR (${{ secrets.REMOTE_APP_DIR }})"
              exit 1
            fi
            # Pull new images (tags: latest) and restart services
            docker compose pull || true
            docker compose up -d --remove-orphans
            # Optional cleanup
            docker image prune -f
            echo "Deployment complete. Services restarted."
